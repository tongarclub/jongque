services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: jongque-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: jongque_db
      POSTGRES_USER: jongque_user
      POSTGRES_PASSWORD: jongque_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - jongque-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: jongque-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - jongque-network

  # Next.js Application (Development)
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    container_name: jongque-app
    restart: unless-stopped
    env_file:
      - docker.env
    environment:
      - NODE_ENV=development
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - postgres
      - redis
    networks:
      - jongque-network
    command: npm run dev

  # Prisma Studio (Optional)
  prisma-studio:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    container_name: jongque-prisma-studio
    restart: unless-stopped
    env_file:
      - docker.env
    ports:
      - "5555:5555"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - postgres
    networks:
      - jongque-network
    command: npx prisma studio --hostname 0.0.0.0
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  jongque-network:
    driver: bridge
