#!/usr/bin/env node

/**
 * Production Database Reset Script
 * ‚ö†Ô∏è  WARNING: This will DELETE ALL DATA in the database
 * Usage: node scripts/production-db-reset.js
 */

const { PrismaClient } = require('@prisma/client')

async function resetProductionDatabase() {
  const prisma = new PrismaClient()
  
  try {
    console.log('üîÑ Connecting to production database...')
    await prisma.$connect()
    console.log('‚úÖ Connected to database')
    
    console.log('‚ö†Ô∏è  WARNING: This will DELETE ALL DATA!')
    console.log('üìä Current database status:')
    
    // Show current data count
    const userCount = await prisma.user.count()
    const businessCount = await prisma.business.count()
    const bookingCount = await prisma.booking.count()
    
    console.log(`   - Users: ${userCount}`)
    console.log(`   - Businesses: ${businessCount}`)
    console.log(`   - Bookings: ${bookingCount}`)
    
    console.log('')
    console.log('üóëÔ∏è  Deleting all data...')
    
    // Delete in correct order (respecting foreign key constraints)
    await prisma.booking.deleteMany()
    console.log('   ‚úÖ Deleted all bookings')
    
    await prisma.operatingHours.deleteMany()
    console.log('   ‚úÖ Deleted all operating hours')
    
    await prisma.subscription.deleteMany()
    console.log('   ‚úÖ Deleted all subscriptions')
    
    await prisma.business.deleteMany()
    console.log('   ‚úÖ Deleted all businesses')
    
    await prisma.account.deleteMany()
    console.log('   ‚úÖ Deleted all accounts')
    
    await prisma.session.deleteMany()
    console.log('   ‚úÖ Deleted all sessions')
    
    await prisma.user.deleteMany()
    console.log('   ‚úÖ Deleted all users')
    
    console.log('')
    console.log('‚úÖ Database reset completed!')
    console.log('üí° Next steps:')
    console.log('   1. Run: node scripts/production-db-migrate.js')
    console.log('   2. Run: node scripts/production-db-seed.js')
    
  } catch (error) {
    console.error('‚ùå Database reset failed:', error.message)
    
    if (error.code === 'P1001') {
      console.log('üí° Database connection failed. Check your DATABASE_URL')
    }
  } finally {
    await prisma.$disconnect()
  }
}

// Confirmation prompt
console.log('‚ö†Ô∏è  PRODUCTION DATABASE RESET')
console.log('This will DELETE ALL DATA in your production database!')
console.log('')
console.log('To proceed, set environment variable: CONFIRM_RESET=yes')
console.log('Example: CONFIRM_RESET=yes node scripts/production-db-reset.js')

if (process.env.CONFIRM_RESET === 'yes') {
  resetProductionDatabase().catch(console.error)
} else {
  console.log('‚ùå Reset cancelled. Set CONFIRM_RESET=yes to proceed.')
  process.exit(1)
}
